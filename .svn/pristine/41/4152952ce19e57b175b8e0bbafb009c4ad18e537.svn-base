/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unobest.rmistuff.clientside;

import Interfaces.ListOfBussesInter;
import Interfaces.ListOfCustomersInter;
import java.rmi.RemoteException;
import java.util.List;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import unobest.model.Customer;
import unobest.rmistuff.serverside.interfaces.BusFascade;

/**
 *
 * @author Ian
 */
public class SuperAdmin extends javax.swing.JFrame {

    DefaultListModel customers;
    DefaultListModel admins;

    /**
     * Creates new form SuperAdmin
     */
    public SuperAdmin() {
        initComponents();
        customers = new DefaultListModel();
        admins = new DefaultListModel();
        adminList.setModel(admins);
        customerList.setModel(customers);
    }

    public void load() {
        try {
            ListOfCustomersInter server = (ListOfCustomersInter) ClientSideServerInstance.getServer("127.0.0.1");
            TreeMap<String, Customer> customers = (TreeMap<String, Customer>) server.getAllCustomers(); //<--Error
            //TreeMap<String,Bus> busses = server.getBusses();
            for (Customer c : customers.values()) {
                if (!c.isSuperAdmin()) {
                    if (c.isAdmin()) {
                        admins.addElement(c.getName());
                    } else {
                        this.customers.addElement(c.getName());
                    }
                }

            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        customerList = new javax.swing.JList();
        makeAdminBtn = new javax.swing.JButton();
        revertAdminBtn = new javax.swing.JButton();
        removeAccountBtn = new javax.swing.JButton();
        makeAccountBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        adminList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        customerList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        customerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                customerListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(customerList);

        makeAdminBtn.setText("Make Admin");
        makeAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAdminBtnActionPerformed(evt);
            }
        });

        revertAdminBtn.setText("Revert Admin");
        revertAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revertAdminBtnActionPerformed(evt);
            }
        });

        removeAccountBtn.setText("Remove Account");
        removeAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAccountBtnActionPerformed(evt);
            }
        });

        makeAccountBtn.setText("Make Account");
        makeAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAccountBtnActionPerformed(evt);
            }
        });

        adminList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        adminList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                adminListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(adminList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeAccountBtn)
                    .addComponent(makeAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(revertAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(makeAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(makeAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(revertAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(makeAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void revertAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revertAdminBtnActionPerformed
        // TODO add your handling code here:
        disableButtons();
        if (adminList.getSelectedIndex() > -1) {
            try {
                String username = (String) adminList.getSelectedValue();
                admins.removeElement(username);
                customers.addElement(username);
                //Change Actual Object
                ListOfCustomersInter server = (ListOfCustomersInter) ClientSideServerInstance.getServer("127.0.0.1");
                server.revertAdmin(username);
            } catch (RemoteException ex) {
                Logger.getLogger(SuperAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Admin is not selected");

        }
        enableButtons();
    }//GEN-LAST:event_revertAdminBtnActionPerformed

    private void makeAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAccountBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_makeAccountBtnActionPerformed

    private void makeAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAdminBtnActionPerformed
        // TODO add your handling code here:
        disableButtons();
        if (customerList.getSelectedIndex() > -1) {
            try {
                String username = (String) customerList.getSelectedValue();
                customers.removeElement(username);
                admins.addElement(username);
                //Change Actual Object
                ListOfCustomersInter server = (ListOfCustomersInter) ClientSideServerInstance.getServer("127.0.0.1");
                server.makeAdmin(username);
            } catch (RemoteException ex) {
                Logger.getLogger(SuperAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Customer is not selected");

        }
        enableButtons();
    }//GEN-LAST:event_makeAdminBtnActionPerformed

    private void adminListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_adminListValueChanged
        // TODO add your handling code here:
        customerList.clearSelection();
    }//GEN-LAST:event_adminListValueChanged

    private void customerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_customerListValueChanged
        // TODO add your handling code here:
        adminList.clearSelection();
    }//GEN-LAST:event_customerListValueChanged

    private void removeAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAccountBtnActionPerformed
        // TODO add your handling code here:
        disableButtons();
        if (customerList.getSelectedIndex() > -1 || adminList.getSelectedIndex() > -1) {
            try {
                String username = (String) customerList.getSelectedValue();
                if (username == null) {
                    username = (String) adminList.getSelectedValue();
                }
                if (JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + username + " from the system", "WARNING",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    ListOfCustomersInter server = (ListOfCustomersInter) ClientSideServerInstance.getServer("127.0.0.1");
                    server.removeCustomer(username);
                    customers.removeElement(username);
                    admins.removeElement(username);
                } 

            } catch (RemoteException ex) {
                Logger.getLogger(SuperAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "User not selected");

        }
        enableButtons();
    }//GEN-LAST:event_removeAccountBtnActionPerformed

    private void disableButtons() {
        makeAccountBtn.setEnabled(false);
        makeAdminBtn.setEnabled(false);
        revertAdminBtn.setEnabled(false);
        removeAccountBtn.setEnabled(false);

    }

    private void enableButtons() {
        makeAccountBtn.setEnabled(true);
        makeAdminBtn.setEnabled(true);
        revertAdminBtn.setEnabled(true);
        removeAccountBtn.setEnabled(true);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SuperAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SuperAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList adminList;
    private javax.swing.JList customerList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton makeAccountBtn;
    private javax.swing.JButton makeAdminBtn;
    private javax.swing.JButton removeAccountBtn;
    private javax.swing.JButton revertAdminBtn;
    // End of variables declaration//GEN-END:variables
}
