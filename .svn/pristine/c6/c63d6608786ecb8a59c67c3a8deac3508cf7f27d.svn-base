/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package unobest.rmistuff.clientside;

import Interfaces.ListOfCustomersInter;
import Interfaces.ListOfRoutesInter;
import java.awt.BorderLayout;
import java.awt.Color;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import unobest.model.Customer;
import unobest.rmistuff.serverside.interfaces.BusServer;
import unobest.rmistuff.serverside.interfaces.CustomerFascade;
import unobest.rmistuff.serverside.interfaces.RouteFascade;
import unobest.rmistuff.serverside.interfaces.WatchListFascade;

/**
 *
 * @author comqdhb
 */
public class RouteManager extends javax.swing.JFrame {

    DefaultListModel dlm;
    private WatchListFascade watchList;
    String thisCust;
    ListOfCustomersInter server = (ListOfCustomersInter) ClientSideServerInstance.getServer("127.0.0.1");

    /**
     * Creates new form RouteManager
     */
    public RouteManager() {
        initComponents();
        dlm = new DefaultListModel();
        routeList.setModel(dlm);
    }

    public void setCustomer(String c) {
        thisCust = c;
    }

    public void setRoutes(List<RouteFascade> routes) {
        for (RouteFascade rf : routes) {
            dlm.addElement(rf);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        routeList = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        routeList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(routeList);

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Change Password");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton5)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        final List<RouteFascade> z = routeList.getSelectedValuesList();

        try {

            SwingWorker worker7 = new SwingWorker() { //Untested

                @Override
                protected Object doInBackground() throws Exception {
                    for (RouteFascade r : z) {
                        try {
                            
                            watchList.removeRoute(r.getName());
                            server.saveCustToFile();
                            JOptionPane.showMessageDialog(rootPane, "Route removed from watchlist");

                        } catch (RemoteException ex) {
                            Logger.getLogger(RouteManager.class.getName()).log(Level.SEVERE, null, ex);

                        }

                    }
                    return null;
                }
            };

            worker7.execute();

        } catch (Exception ne) {
            ne.printStackTrace();
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

// TODO add your handling code here:
        final List<RouteFascade> z = routeList.getSelectedValuesList();

        try {

            SwingWorker worker8 = new SwingWorker() { //Untested

                @Override
                protected Object doInBackground() throws Exception {

                    for (RouteFascade r : z) {
                        try {

                            if (watchList.getRoutes().contains(r)) {
                                JOptionPane.showMessageDialog(rootPane, "Route already in watchlist");
                            } else {
                                watchList.addRoute(r.getName());
                                System.out.println("adding route " + r.getName());
                                JOptionPane.showMessageDialog(rootPane, "Route added from watchlist");

                                server.saveCustToFile();
                            }
                        } catch (Exception ex) {
                            Logger.getLogger(RouteManager.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                    return null;
                }
            };

            worker8.execute();

        } catch (Exception ne) {
            ne.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    //Test RoutePanel - /*CURRENTLY CRASHES DUE TO NO JOURNEY FOR ROUTE*/
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {

            SwingWorker worker16 = new SwingWorker() {

                @Override
                protected Object doInBackground() throws Exception {
                    if (routeList.getSelectedValue() == null) {
                        ListOfRoutesInter server = (ListOfRoutesInter) ClientSideServerInstance.getServer("127.0.0.1");
                        //RoutePanel panel = new RoutePanel(server.getAllRouteFascades());
                        JFrame f = new JFrame();
                        f.setLayout(new BorderLayout());

                        for (int i = 0; i < server.getAllRouteFascades().size(); i++) {
                            RoutePanel panel = new RoutePanel(server.getAllRouteFascades().get(i));
                            f.add(panel, BorderLayout.CENTER);
                        }

                        //f.add(panel, BorderLayout.CENTER);
                        f.pack();
                        f.setVisible(true);
                    } else {
                        RoutePanel panel = new RoutePanel((RouteFascade) routeList.getSelectedValue());
                        JFrame f = new JFrame();
                        f.setLayout(new BorderLayout());
                        f.add(panel, BorderLayout.WEST);

                        /*JPanel pain = new JPanel();This creates weird blank space
                         pain.setBackground(Color.WHITE);
                         pain.add(new RouteComponent(30,30,10));
                         pain.setSize(500, 500);
                         f.add(pain, BorderLayout.WEST);
                         //pain.add()
                         f.getContentPane().add(new RouteComponent(30,30,10));*/
                        f.pack();
                        f.setSize(500, 500);
                        f.setVisible(true);
                    }
                    return null;
                }
            };

            worker16.execute();

        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        AccountManager am = new AccountManager();
        am.setVisible(true);
        am.setCustomer(thisCust);
        this.setVisible(false);


    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RouteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RouteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RouteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RouteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RouteManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList routeList;
    // End of variables declaration//GEN-END:variables

    void setWatchList(WatchListFascade wl) {
        watchList = wl;
        routeList.setCellRenderer(new RouteFascadeRenderer(wl));
    }
}
